class Solution {
    ListNode* reverseList(ListNode* root){
        if(root == NULL || root->next == NULL)
            return root;
        ListNode* curr = root;
        ListNode* prev = NULL; ListNode* temp = NULL;
        while(curr!=NULL){
            temp = curr->next;
            curr->next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
public:
    bool isPalindrome(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        
        while(fast!=NULL && fast->next!=NULL){
            fast = fast->next->next;
            slow = slow->next;
        }
        
        ListNode* mid = reverseList(slow);
        fast = head;
        
        while(mid!=NULL){
            if(fast->val != mid->val){
                return false;
            }
            fast = fast->next; mid = mid->next;
        }
        return true;        
    }
};
